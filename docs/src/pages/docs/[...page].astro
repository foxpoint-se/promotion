---
import type { GetStaticPaths, Page } from "astro";

import { CollectionEntry, getCollection } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import { Pagination } from "../../components/Pagination";

export const getStaticPaths = (async ({ paginate }) => {
  const articles = await getCollection("docs");

  const articlesWithDate = articles.filter((a) => a.data.date);
  const articlesWithoutDate = articles.filter((a) => !a.data.date);

  const sortedArticlesByDate = [...articlesWithDate].sort(function (a, b) {
    if (!b.data.date || !a.data.date) {
      return -1;
    }
    return b.data.date.valueOf() - a.data.date.valueOf();
  });

  const allArticles = [...sortedArticlesByDate, ...articlesWithoutDate];

  return paginate(allArticles, {
    pageSize: 8,
  });
}) satisfies GetStaticPaths;

interface Props {
  page: Page<CollectionEntry<"docs">>;
}

const { page } = Astro.props as Props;
---

<Layout
  title="Foxpoint documentation"
  description="Articles, guides, documentation etc."
>
  <main class="px-md mb-2xl max-w-3xl mx-auto">
    <div class="text-sm breadcrumbs">
      <ul>
        <li><a href="/">Home</a></li>
        <li>Articles</li>
      </ul>
    </div>
    <div class="mt-lg mb-md">
      <h1 class="text-4xl font-bold text-gradient">Articles</h1>
    </div>
    <div class="flex flex-col gap-md">
      {
        page.data.map((a) => {
          return (
            <div class="card bg-transparent border border-neutral-300 hover:shadow-lg transition-shadow">
              <div class="card-body p-md">
                <h2 class="card-title flex items-start">
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    fill="none"
                    viewBox="0 0 24 24"
                    stroke-width="1.5"
                    stroke="currentColor"
                    class="w-6 h-6 inline-block text-primary mt-[3px] shrink-0"
                  >
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      d="M19.5 14.25v-2.625a3.375 3.375 0 00-3.375-3.375h-1.5A1.125 1.125 0 0113.5 7.125v-1.5a3.375 3.375 0 00-3.375-3.375H8.25m0 12.75h7.5m-7.5 3H12M10.5 2.25H5.625c-.621 0-1.125.504-1.125 1.125v17.25c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125V11.25a9 9 0 00-9-9z"
                    />
                  </svg>
                  <a
                    class="link link-primary block"
                    href={`/${a.collection}/${a.slug}`}
                  >
                    {a.data.title}
                  </a>
                </h2>
                {a.data.description && <p>{a.data.description}</p>}
                {a.data.tags && (
                  <div class="card-actions justify-end">
                    {a.data.tags.map((t) => (
                      <div class="badge badge-outline badge-primary capitalize">
                        {t}
                      </div>
                    ))}
                  </div>
                )}
              </div>
            </div>
          );
        })
      }
    </div>
    <div class="flex justify-center mt-lg">
      <Pagination
        prevUrl={page.url.prev}
        nextUrl={page.url.next}
        currentPage={page.currentPage}
        pageSize={page.size}
        totalItems={page.total}
        basePath="/docs/"
      />
    </div>
  </main>
</Layout>
