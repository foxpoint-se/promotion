---
import type { GetStaticPaths, Page } from "astro";

import { CollectionEntry, getCollection } from "astro:content";
import { Pagination } from "../../components/Pagination";
import { NewsUpdateItem } from "../../components/NewsUpdateItem";
import Layout from "../../layouts/Layout.astro";

export const getStaticPaths = (async ({ paginate }) => {
  const articles = await getCollection("updates");

  const sortedArticles = [...articles].sort(function (a, b) {
    return b.data.date.valueOf() - a.data.date.valueOf();
  });

  return paginate(sortedArticles, {
    pageSize: 8,
  });
}) satisfies GetStaticPaths;

interface Props {
  page: Page<CollectionEntry<"updates">>;
}

const { page } = Astro.props as Props;
---

<Layout title="Foxpoint news updates" description="Log of our recent work.">
  <main class="px-md mb-2xl max-w-3xl mx-auto">
    <div class="text-sm breadcrumbs">
      <ul>
        <li><a href="/">Home</a></li>
        <li>News updates</li>
      </ul>
    </div>
    <div class="mt-lg mb-md">
      <h1 class="text-4xl font-bold text-gradient">News updates</h1>
    </div>
    <div class="flex flex-col gap-xl">
      {
        page.data.map((a) => {
          return (
            <NewsUpdateItem
              update={{ ...a.data, linkUrl: `/${a.collection}/${a.slug}` }}
            />
          );
        })
      }
    </div>
    <div class="flex justify-center mt-lg">
      <Pagination
        prevUrl={page.url.prev}
        nextUrl={page.url.next}
        currentPage={page.currentPage}
        pageSize={page.size}
        totalItems={page.total}
        basePath="/updates/"
      />
    </div>
  </main>
</Layout>
